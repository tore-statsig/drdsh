"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const client_core_1 = require("@statsig/client-core");
class StatsigNetwork extends client_core_1.NetworkCore {
    constructor(options = null) {
        super(options);
        const config = options === null || options === void 0 ? void 0 : options.networkConfig;
        this._downloadConfigSpecsUrlConfig = new client_core_1.UrlConfiguration(client_core_1.Endpoint._download_config_specs, config === null || config === void 0 ? void 0 : config.downloadConfigSpecsUrl, config === null || config === void 0 ? void 0 : config.api, config === null || config === void 0 ? void 0 : config.downloadConfigSpecsFallbackUrls);
    }
    fetchConfigSpecs(sdkKey, priority) {
        return __awaiter(this, void 0, void 0, function* () {
            var _a;
            const response = yield this.get({
                sdkKey: sdkKey,
                urlConfig: this._downloadConfigSpecsUrlConfig,
                priority,
            });
            return (_a = response === null || response === void 0 ? void 0 : response.body) !== null && _a !== void 0 ? _a : null;
        });
    }
}
exports.default = StatsigNetwork;
