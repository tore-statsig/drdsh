"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.resultToLayerEval = exports.resultToConfigEval = exports.resultToGateEval = exports.makeEvalResult = void 0;
function makeEvalResult(overrides) {
    const base = {
        unsupported: false,
        bool_value: false,
        rule_id: '',
        secondary_exposures: [],
        json_value: {},
        explicit_parameters: null,
        allocated_experiment_name: null,
        is_experiment_group: false,
        group_name: null,
        undelegated_secondary_exposures: undefined,
    };
    return Object.assign(Object.assign({}, base), overrides);
}
exports.makeEvalResult = makeEvalResult;
function resultToGateEval(spec, result) {
    var _a;
    return {
        name: spec.name,
        id_type: spec.idType,
        rule_id: result.rule_id,
        value: result.bool_value,
        secondary_exposures: result.secondary_exposures,
        version: (_a = spec.version) === null || _a === void 0 ? void 0 : _a.toString(),
    };
}
exports.resultToGateEval = resultToGateEval;
function resultToConfigEval(spec, result) {
    var _a, _b, _c;
    return {
        name: spec.name,
        id_type: spec.idType,
        rule_id: result.rule_id,
        value: result.json_value,
        secondary_exposures: result.secondary_exposures,
        group: (_a = result.group_name) !== null && _a !== void 0 ? _a : '',
        group_name: (_b = result.group_name) !== null && _b !== void 0 ? _b : undefined,
        is_device_based: false,
        is_experiment_active: spec.isActive,
        is_user_in_experiment: result.is_experiment_group,
        version: (_c = spec.version) === null || _c === void 0 ? void 0 : _c.toString(),
        passed: result.bool_value,
    };
}
exports.resultToConfigEval = resultToConfigEval;
function resultToLayerEval(layerSpec, experimentSpec, result) {
    var _a, _b, _c, _d, _e;
    return {
        name: layerSpec.name,
        rule_id: result.rule_id,
        value: result.json_value,
        secondary_exposures: result.secondary_exposures,
        undelegated_secondary_exposures: result.undelegated_secondary_exposures,
        allocated_experiment_name: (_a = result.allocated_experiment_name) !== null && _a !== void 0 ? _a : '',
        explicit_parameters: (_b = result.explicit_parameters) !== null && _b !== void 0 ? _b : [],
        group: (_c = result.group_name) !== null && _c !== void 0 ? _c : '',
        group_name: (_d = result.group_name) !== null && _d !== void 0 ? _d : undefined,
        is_device_based: false,
        is_experiment_active: experimentSpec === null || experimentSpec === void 0 ? void 0 : experimentSpec.isActive,
        is_user_in_experiment: result.is_experiment_group,
        version: (_e = layerSpec.version) === null || _e === void 0 ? void 0 : _e.toString(),
    };
}
exports.resultToLayerEval = resultToLayerEval;
