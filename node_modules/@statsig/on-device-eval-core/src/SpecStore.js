"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SpecStore = void 0;
const client_core_1 = require("@statsig/client-core");
function _parseResponse(values) {
    return (0, client_core_1._typedJsonParse)(values, 'has_updates', 'DownloadConfigSpecsResponse');
}
class SpecStore {
    constructor() {
        this._rawValues = null;
        this._values = null;
        this._source = 'Uninitialized';
        this._lcut = 0;
        this._receivedAt = 0;
        this._defaultEnvironment = null;
    }
    getValues() {
        return this._rawValues ? _parseResponse(this._rawValues) : null;
    }
    getSource() {
        return this._source;
    }
    getDefaultEnvironment() {
        return this._defaultEnvironment;
    }
    setValuesFromDataAdapter(result) {
        var _a;
        if (!result) {
            return;
        }
        const values = _parseResponse(result.data);
        if ((values === null || values === void 0 ? void 0 : values.has_updates) !== true) {
            return;
        }
        this._lcut = values.time;
        this._receivedAt = result.receivedAt;
        this._source = result.source;
        this._values = values;
        this._rawValues = result.data;
        this._defaultEnvironment = (_a = values.default_environment) !== null && _a !== void 0 ? _a : null;
    }
    reset() {
        this._values = null;
        this._rawValues = null;
        this._source = 'Loading';
    }
    finalize() {
        if (this._values) {
            return;
        }
        this._source = 'NoValues';
    }
    getSpecAndSourceInfo(kind, name) {
        var _a;
        // todo: use Object instead of Array
        const specs = this._getSpecs(kind);
        return {
            spec: (_a = specs === null || specs === void 0 ? void 0 : specs.find((spec) => spec.name === name)) !== null && _a !== void 0 ? _a : null,
            source: this._source,
            lcut: this._lcut,
            receivedAt: this._receivedAt,
        };
    }
    getParamStoreAndSourceInfo(name) {
        var _a, _b, _c;
        const paramStores = (_a = this._values) === null || _a === void 0 ? void 0 : _a.param_stores;
        return {
            paramStoreConfig: (_c = (_b = paramStores === null || paramStores === void 0 ? void 0 : paramStores[name]) === null || _b === void 0 ? void 0 : _b.parameters) !== null && _c !== void 0 ? _c : null,
            source: this._source,
            lcut: this._lcut,
            receivedAt: this._receivedAt,
        };
    }
    _getSpecs(kind) {
        var _a, _b, _c;
        switch (kind) {
            case 'gate':
                return (_a = this._values) === null || _a === void 0 ? void 0 : _a.feature_gates;
            case 'config':
                return (_b = this._values) === null || _b === void 0 ? void 0 : _b.dynamic_configs;
            case 'layer':
                return (_c = this._values) === null || _c === void 0 ? void 0 : _c.layer_configs;
        }
    }
}
exports.SpecStore = SpecStore;
